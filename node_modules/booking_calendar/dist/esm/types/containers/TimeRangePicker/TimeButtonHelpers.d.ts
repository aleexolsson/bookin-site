import { QronoStylesType, SlotsType } from '../../interfaces';
import { Time } from '../../helpers';
export interface TimeButtonProps {
    hour: Time | string;
    selectedDay: Date | undefined;
    timeString: string;
    enabledSlots: SlotsType[];
    startTime: Date | undefined;
    endTime: Date | undefined;
    buttonType: 'start' | 'end';
    timezone: string;
    setStart: (time: Date | undefined) => void;
    setEnd: (time: Date | undefined) => void;
    styles: QronoStylesType;
}
/**
   * This function controls the on click interaction with the buttons in the Time Range Picker
   * The interface used in this function is used for the TimeButton component too
   * @param {Time} hour This is the hour indicated in the button represented by a Time object
   * @param {Date} selectedDay This is the date that the user selected
   * @param {SlotsType[]} enabledSlots This is an array with the available slots for the selectedDay
   * @param {Date} startTime This is the start time of the booking
   * @param {Date} endTime This is the end time of the booking
   * @param {"start" | "end"} buttonType This is the type of the button
   * @param {string} timezone This is the timezone for the calendar
   * @function setStart This is the callback to set the start time globally
   * @function setEnd This is the callback to set the end time globally
*/
export declare const onTimeButtonClick: ({ hour, selectedDay, enabledSlots, startTime, endTime, buttonType, setStart, setEnd, timezone }: TimeButtonProps) => void;
/**
   * This function includes the timezone to set the end time globally
   * @param {Time} hour This is the hour indicated in the button represented by a Time object
   * @param {Date} selectedDay This is the date that the user selected
   * @param {string} timezone This is the timezone for the calendar
   * @function setEnd This is the callback to set the end time globally
 */
export declare const setEndTime: (hour: Time, setEnd: (time: Date | undefined) => void, selectedDay: Date, timezone: string) => void;
/**
   * This function includes the timezone to set the start time globally
   * @param {Time} hour This is the hour indicated in the button represented by a Time object
   * @param {Date} selectedDay This is the date that the user selected
   * @param {string} timezone This is the timezone for the calendar
   * @function setStart This is the callback to set the start time globally
*/
export declare const setStartTime: (hour: Time, setStart: (time: Date | undefined) => void, selectedDay: Date, timezone: string) => void;
