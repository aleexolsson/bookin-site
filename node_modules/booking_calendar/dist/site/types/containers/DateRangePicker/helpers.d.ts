import { EventType } from "../../interfaces";
import { handleDateRangeClickProps } from "./interfaces";
/**
   * This function verifies if the day displayed in the calendar is disabled according to the events and the config
   * @param {Date} day the date that will be assesed
   * @param {EventType[]} blockingPeriods An array with all of the events of the calendar
   * @param {string} timezone Indicates the timezone for the calendar
   * @return {boolean} Returns true if the day is disabled or false if it is enabled.
*/
export declare const isDayDisabled: (date: Date, blockingPeriods: EventType[], timezone: string) => boolean;
/**
   * This function handles the interaction of the user with the calendar  when clicking on different days
   * @param {Date} day The date taht is being clicked
   * @param {Date} startTime The date of the start time for the booking if it has been set
   * @param {Date} endTime The date of the end time for the booking if it has been set
   * @function isDayDisabled A function that indicates if the day that is being clicked is disabled
   * @function setStart A function that an start time for the Qrono Calendar globally
   * @function setEnd A function that an end time for the Qrono Calendar globally
*/
export declare const handleDateRangeClick: (props: handleDateRangeClickProps) => void;
